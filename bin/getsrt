#!/usr/bin/env bash
to_srt()
{
  local name=$(basename $1)
  echo "${name%.*}.srt"
}

similar_text()
{
  php -r "similar_text('$1', '$2', \$p); print (int)\$p;"
}

get_url()
{
  local name=$1
  local srt=""
  local url=""
  local similarity=0
  echo "name=$name" >&2
  local values=($(subtitler $name --lang pob | grep Subtitle -A 1 | awk '{ print $2 }'))
  echo "values=${values[*]}" >&2
  for ((i=0; i < ${#values[@]}; i+=2)) {
    local _srt="${values[i]}"
    local _url="${values[i+1]}"
    local _similarity=$(similar_text "$name" "$_srt")
    echo "$_srt $_url $_similarity" >&2
    if ((_similarity > similarity)); then
      srt="$_srt"
      url="$_url"
      similarity=$_similarity
    fi
  }
  ((similarity > 85)) && echo $url
}

srt_exists()
{
  local name=$1
  local src=${2-.}
  ok=$(find $src -name $name)
  [ "$ok" != "" ]
}

find_movies_add()
{
  local src=$1
  for movie in $(find $src -name '*.m4v' -or -name '*.mkv'); do
    name=$(to_srt $movie)
    if srt_exists $name $src; then
      echo [$name] already exists
    else
      url=$(get_url $name)
      if [ "$url" == "" ]; then
        echo [$name] not found
        continue
      fi
      echo [$name] found
      curl -so ${name}.gz $url >/dev/null
      [ $? -eq 0 ] || continue
      gunzip ${name}.gz >/dev/null
    fi
  done
}

src=${1-.}
find_movies_add $src
